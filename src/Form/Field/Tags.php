<?php

namespace OpenAdmin\Admin\Form\Field;

use Illuminate\Contracts\Support\Arrayable;
use Illuminate\Support\Arr;
use Illuminate\Support\Collection;
use OpenAdmin\Admin\Form\Field;

class Tags extends Text
{
    protected static $css = [
        '/vendor/open-admin/tagify/tagify.css',
    ];

    protected static $js = [
        '/vendor/open-admin/tagify/tagify.min.js',
        '/vendor/open-admin/tagify/tagify.polyfills.min.js',
    ];

    public function __construct($column = '', $arguments = [])
    {
        parent::__construct($column, $arguments);
        $this->prepend('<i class="icon-tags"></i>');

        $this->customFormat(function ($value) {
           if(is_array($value)) {
               return implode(',', $value);
           }
           return $value;
        });
    }

    /**
     * Prepare for a field value before update or insert.
     *
     * @param $value
     *
     * @return mixed
     */
    public function prepare($value)
    {
        $value = parent::prepare($value);

        if(is_string($value)) {
            return explode(',' ,$value);
        }

        return $value;
    }

    public function render()
    {
        $id = $this->getId();
        $options = array_merge([

        ], $this->options);
        $options = json_encode($options);
        $this->script = "new Tagify (document.getElementById('$id'), {
            originalInputValueFormat: values => values.map(item => item.value).join(','),
            ...$options
        });";

        return parent::render(); // TODO: Change the autogenerated stub
    }
}
